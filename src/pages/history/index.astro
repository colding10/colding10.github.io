---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PageHead from '@/components/PageHead.astro'
import Layout from '@/layouts/Layout.astro'
import { TEAM_URLS } from '@/lib/team-utils'
import { getCollection } from 'astro:content'

const MONTHS = [
  'January',
  'February',
  'March',
  'April',
  'May',
  'June',
  'July',
  'August',
  'September',
  'October',
  'November',
  'December',
]

const ctfCollection = await getCollection('ctfs')
const entries = ctfCollection.map((entry) => ({ id: entry.id, ...entry.data }))

const sorted = [...entries].sort((a, b) => b.year - a.year || b.month - a.month)

type Group = { year: number; month: number; items: typeof entries }

const groupsMap = new Map<string, Group>()
for (const e of sorted) {
  const key = `${e.year}-${String(e.month).padStart(2, '0')}`
  if (!groupsMap.has(key))
    groupsMap.set(key, { year: e.year, month: e.month, items: [] })
  groupsMap.get(key)!.items.push(e)
}
const groups = Array.from(groupsMap.values()).sort(
  (a, b) => b.year - a.year || b.month - a.month,
)

const totalCTFs = entries.length
const uniqueMonthsSet = new Set(entries.map((e) => `${e.year}-${e.month}`))
const totalMonths = uniqueMonthsSet.size
---

<Layout class="max-w-3xl">
  <PageHead
    slot="head"
    title="CTF History"
    description="Timeline of CTF competitions and results"
  />
  <Breadcrumbs items={[{ label: 'History', icon: 'lucide:calendar' }]} />

  <section aria-labelledby="ctf-history-title" class="font-mono">
    <h1 id="ctf-history-title" class="mt-5 text-3xl font-bold">CTF History</h1>
    <p class="text-muted-foreground mt-2">
      Competition results over time, newest first.
    </p>

    <div
      class="mt-4 rounded-lg border border-blue-200/70 bg-blue-50/80 p-4 dark:border-blue-800/50 dark:bg-blue-950/40"
    >
      <div class="flex flex-wrap gap-6 text-sm">
        <div>
          <span class="text-muted-foreground">Total CTFs:</span>
          <span class="ml-1 font-semibold">{totalCTFs}</span>
        </div>
        <div>
          <span class="text-muted-foreground">Months Active:</span>
          <span class="ml-1 font-semibold">{totalMonths}</span>
        </div>
      </div>
    </div>

    <div
      class="mt-4 rounded-lg border border-amber-200/70 bg-amber-50/80 p-4 dark:border-amber-800/50 dark:bg-amber-950/40"
    >
      <div class="flex items-start gap-3">
        <div class="text-muted-foreground text-lg">‚ÑπÔ∏è</div>
        <div class="space-y-2 text-sm">
          <p>
            <strong>Sorting:</strong> CTFs are sorted by month/year, but probably
            not within each month.
          </p>
          <p>
            <strong>Teams:</strong>
            {
              Object.entries(TEAM_URLS).map(([team, url], index) => (
                <>
                  <a
                    href={url}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="font-mono hover:underline"
                  >
                    {team}
                  </a>
                  {index < Object.keys(TEAM_URLS).length - 1 && ', '}
                </>
              ))
            }
          </p>
        </div>
      </div>
    </div>

    <div
      class="mt-4 rounded-lg border border-emerald-200/70 bg-emerald-50/80 p-4 dark:border-emerald-800/50 dark:bg-emerald-950/40"
    >
      <div class="mb-3 flex items-center gap-3">
        <div class="text-muted-foreground text-lg">üí°</div>
        <div class="text-sm">
          <strong>Tip:</strong> Click a CTF name to open its detail page.
        </div>
      </div>

      <!-- Search and Filter -->
      <div class="space-y-3">
        <div class="flex flex-col gap-2 sm:flex-row sm:items-center">
          <input
            type="text"
            id="search"
            placeholder="Search CTF names..."
            class="bg-background placeholder:text-muted-foreground focus:ring-ring flex-1 rounded-md border px-3 py-2 text-sm focus:ring-2 focus:outline-none"
          />
          <select
            id="yearFilter"
            class="bg-background focus:ring-ring rounded-md border px-3 py-2 text-sm focus:ring-2 focus:outline-none"
          >
            <option value="">All Years</option>
            {
              Array.from(new Set(entries.map((e) => e.year)))
                .sort((a, b) => b - a)
                .map((year) => <option value={year}>{year}</option>)
            }
          </select>
          <select
            id="teamFilter"
            class="bg-background focus:ring-ring rounded-md border px-3 py-2 text-sm focus:ring-2 focus:outline-none"
          >
            <option value="">All Teams</option>
            {
              Array.from(
                new Set(entries.filter((e) => e.team).map((e) => e.team)),
              )
                .sort()
                .map((team) => <option value={team}>{team}</option>)
            }
          </select>
        </div>
        <div class="text-muted-foreground flex items-center gap-2 text-xs">
          <span id="resultCount">{entries.length} CTFs</span>
          <span>‚Ä¢</span>
          <button id="clearFilters" class="hover:text-foreground underline">
            Clear filters
          </button>
        </div>
      </div>
    </div>

    <div class="relative mt-8">
      <div class="bg-border absolute top-0 bottom-0 left-4 w-px"></div>

      <div class="space-y-10">
        {
          groups.map((group) => (
            <div class="month-group" data-month={group.month} data-year={group.year}>
              <div class="relative pl-10">
                <div class="bg-primary ring-background absolute top-2 left-4 h-3 w-3 rounded-full ring-2" />
                <p class="text-muted-foreground text-xs tracking-wider uppercase">
                  {MONTHS[group.month - 1]} {group.year}
                </p>
              </div>

              <ul class="mt-4 space-y-3">
                {group.items.map((e) => (
                  <li
                    class="timeline-item relative pl-10"
                    data-name={e.name}
                    data-year={e.year}
                    data-team={e.team || ''}
                  >
                    <div class="bg-accent ring-background absolute top-2 left-4 h-2 w-2 rounded-full ring-2" />
                    <div class="flex flex-wrap items-baseline gap-x-3 gap-y-1">
                      <a
                        href={`/history/${encodeURIComponent(e.id)}`}
                        class="text-primary font-medium hover:underline"
                      >
                        {e.name}
                      </a>

                      <span class="text-muted-foreground text-sm font-medium">
                        {e.placement}
                      </span>

                      {e.team && (
                        <span class="bg-secondary text-secondary-foreground rounded px-1.5 py-0.5 text-xs font-medium">
                          {e.team}
                        </span>
                      )}

                      {e.description && (
                        <span class="text-muted-foreground flex-shrink-0 text-sm italic">
                          ‚Äî {e.description}
                        </span>
                      )}
                    </div>
                  </li>
                ))}
              </ul>
            </div>
          ))
        }
      </div>

      {
        groups.length === 0 && (
          <div class="py-12 text-center">
            <p class="text-muted-foreground">
              No CTF entries yet. Add some to the entries array!
            </p>
          </div>
        )
      }
    </div>
  </section>
</Layout>

<script>
  // Search and filter functionality
  const searchInput = document.getElementById('search') as HTMLInputElement
  const yearFilter = document.getElementById('yearFilter') as HTMLSelectElement
  const teamFilter = document.getElementById('teamFilter') as HTMLSelectElement
  const clearFilters = document.getElementById(
    'clearFilters',
  ) as HTMLButtonElement
  const resultCount = document.getElementById('resultCount') as HTMLSpanElement
  const timelineItems = document.querySelectorAll('.timeline-item')
  const monthGroups = document.querySelectorAll('.month-group')

  function filterItems() {
    const searchTerm = searchInput.value.toLowerCase()
    const selectedYear = yearFilter.value
    const selectedTeam = teamFilter.value

    let visibleCount = 0

    // First, filter individual items
    timelineItems.forEach((item) => {
      const name = item.getAttribute('data-name')?.toLowerCase() || ''
      const year = item.getAttribute('data-year') || ''
      const team = item.getAttribute('data-team') || ''

      const matchesSearch = name.includes(searchTerm)
      const matchesYear = !selectedYear || year === selectedYear
      const matchesTeam = !selectedTeam || team === selectedTeam

      if (matchesSearch && matchesYear && matchesTeam) {
        item.classList.remove('hidden')
        visibleCount++
      } else {
        item.classList.add('hidden')
      }
    })

    // Then, hide/show month groups based on whether they have visible items
    monthGroups.forEach((group) => {
      const visibleItemsInGroup = group.querySelectorAll('.timeline-item:not(.hidden)')
      if (visibleItemsInGroup.length === 0) {
        group.classList.add('hidden')
      } else {
        group.classList.remove('hidden')
      }
    })

    resultCount.textContent = `${visibleCount} CTF${visibleCount !== 1 ? 's' : ''}`
  }

  function clearAllFilters() {
    searchInput.value = ''
    yearFilter.value = ''
    teamFilter.value = ''
    filterItems()
  }

  searchInput.addEventListener('input', filterItems)
  yearFilter.addEventListener('change', filterItems)
  teamFilter.addEventListener('change', filterItems)
  clearFilters.addEventListener('click', clearAllFilters)
</script>
